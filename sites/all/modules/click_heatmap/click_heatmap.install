<?php
// $Id: click_heatmap.install,v 1.1.8.9 2009/09/28 07:50:24 boombatower Exp $
/**
 * @file
 * Provides an integration of the ClickHeat utility which creates click heatmaps.
 *
 * Copyright 2008-2009 by Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Implementation of hook_requirements().
 */
function click_heatmap_requirements($phase) {
  module_load_include('module', 'click_heatmap');

  $requirements = array();
  $t = get_t();
  $description = $t('Click heatmap could not be installed. Please see <a href="@install">INSTALL.txt</a>.',
                    array('@install' => '/' . drupal_get_path('module', 'click_heatmap') . '/INSTALL.txt'));

  // Ensure that the ClickHeat library is installed.
  $requirements['click_heatmap_library'] = array(
    'title' => $t('ClickHeat library'),
    'value' => $t('Not-found'),
    'severity' => REQUIREMENT_ERROR,
    'description' => $description,
  );

  if ($version = click_heatmap_library_version()) {
    $requirements['click_heatmap_library']['value'] = 'ClickHeat ' . $version;
    $requirements['click_heatmap_library']['severity'] = REQUIREMENT_OK;
    unset($requirements['click_heatmap_library']['description']);
  }

  // Ensure that required directories are writable.
  $requirements['click_heatmap_directories'] = array(
    'title' => $t('Click heatmap directories'),
    'value' => $t('Writable'),
    'severity' => REQUIREMENT_OK,
  );

  $base = drupal_get_path('module', 'click_heatmap');
  $directories = array('clickheat/config', 'clickheat/cache', 'clickheat/logs');
  foreach ($directories as $directory) {
    $directory = $base . '/' . $directory;
    if (!is_writable($directory)) {
      $requirements['click_heatmap_directories']['value'] = $t('Not writable (@directory)', array('@directory' => $directory));
      $requirements['click_heatmap_directories']['severity'] = REQUIREMENT_ERROR;
      $requirements['click_heatmap_directories']['description'] = $description;
      break;
    }
  }

  return $requirements;
}

/**
 * Implementation of hook_install().
 */
function click_heatmap_install() {
  module_load_include('module', 'click_heatmap');
  module_load_include('admin.inc', 'click_heatmap');

  // Generate configuration.
  click_heatmap_admin_config_generate();
}

/**
 * Implementation of hook_uninstall().
 */
function click_heatmap_uninstall() {
  variable_del('click_heatmap_scope');
  variable_del('click_heatmap_admin_username');
  variable_del('click_heatmap_admin_password');
}

/**
 * Remove variable 'click_heatmap_library_installed'.
 */
function click_heatmap_update_6200(&$sandbox = NULL) {
  $ret = array();

  variable_del('click_heatmap_library_installed');

  return $ret;
}

/**
 * Add 'count click_heatmap clicks' to anonymous role.
 */
function click_heatmap_update_6201(&$sandbox = NULL) {
  $ret = array();

  module_load_include('admin.inc', 'user');

  // Load current anonymous role permissions.
  $result = db_query('SELECT r.rid, p.perm
                      FROM {role} r
                      LEFT JOIN {permission} p
                        ON r.rid = p.rid
                      WHERE r.rid = %d', DRUPAL_ANONYMOUS_RID);
  $role = db_fetch_object($result);

  // Ensure that 'count click_heatmap clicks' is among the permissions.
  $permissions = explode(', ', $role->perm);
  $permissions[] = 'count click_heatmap clicks';
  $permissions = array_unique($permissions);


  // Generate a form state.
  $form_state = array(
    'values' => array(
      DRUPAL_ANONYMOUS_RID => array(),
      'op' => t('Save permissions'),
    ),
  );

  // Format permissions as checkboxes.
  foreach ($permissions as $permission) {
    $form_state['values'][DRUPAL_ANONYMOUS_RID][$permission] = TRUE;
  }

  // Save the permissions.
  drupal_execute('user_admin_perm', $form_state);

  return $ret;
}
